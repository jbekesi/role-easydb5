# FIXME: we need a naming scheme, proposing  "easydb_<component>_<something>"
#        e.g. "easydb_es_memory_size" or "easydb_srv_external_user_schema"

skip_customer: false

# docker
easydb_proxy_url: ''
easydb_docker_user: ''
easydb_docker_pass: ''
easydb_docker_registry: docker.easydb.de
easydb_container_network: easydb5

easydb_socket:
  pgsql: 127.0.0.1:15432
  eas: 127.0.0.1:83
  server: 127.0.0.1:82
  webfrontend: 127.0.0.1:81

# Where to write log messages to while doing update-auto in the script:
easydb_cron_update_log: /var/log/easydb-update.log
# Path to docker-compose executable:
easydb_script_compose: '`which docker-compose 2>/dev/null`'

# paths
easydb_basedir: /srv/easydb
easydb_config_volume: "{{ easydb_basedir }}/config:/config"

# container configuration
easydb_containers:
  elasticsearch:
    image: "{{ easydb_docker_registry }}/pf/elasticsearch"
    volumes:
      - "{{ easydb_config_volume }}"
      - "{{ easydb_basedir }}/elasticsearch/var/lib/elasticsearch:/var/lib/elasticsearch"
  pgsql:
    image: "{{ easydb_docker_registry }}/pf/postgresql"
    volumes:
      - "{{ easydb_config_volume }}"
      - "{{ easydb_basedir }}/pgsql/backup:/backup"
      - "{{ easydb_basedir }}/pgsql/etc/postgresql:/etc/postgresql"
      - "{{ easydb_basedir }}/pgsql/var/log/postgresql:/var/log/postgresql"
      - "{{ easydb_basedir }}/pgsql/var/lib/postgresql:/var/lib/postgresql"
    ports:
      - "{{ easydb_socket.pgsql }}:5432"
  eas:
    image: "{{ easydb_docker_registry }}/pf/eas"
    volumes:
      - "{{ easydb_config_volume }}"
      - "{{ easydb_basedir }}/eas/var/opt/easydb/lib/eas/assets:/var/opt/easydb/lib/eas/assets"
      - "{{ easydb_basedir }}/eas/var/opt/easydb/log/eas:/var/opt/easydb/log/eas"
      - "{{ easydb_basedir }}/eas/tmp:/tmp"
    ports:
      - "{{ easydb_socket.eas }}:80"
  server:
    image: "{{ easydb_docker_registry }}/pf/server-{{ easydb_solution }}"
    volumes:
      - "{{ easydb_config_volume }}"
      - "{{ easydb_basedir }}/server/easydb-5/var:/easydb-5/var"
      - "{{ easydb_basedir }}/server/var/log/nginx:/var/log/nginx"
      - "{{ easydb_basedir }}/server/hotfolder:/hotfolder"
    ports:
      - "{{ easydb_socket.server }}:80"
  frontend:
    image: "{{ easydb_docker_registry }}/pf/webfrontend"
    volumes:
      - "{{ easydb_config_volume }}"
    ports:
      - "{{ easydb_socket.webfrontend }}:80"

# easydb server
easydb_solution: base
external_user_schema: true
enable_post_settings: true
enable_restart: true
enable_purgedata: false
enable_purgeall: false
enable_plugins:
  - base.easydb4migration

# elasticsearch
easydb_max_map_count: 262144
easydb_es_memory_size: 2g

# E-Mail
enable_mailer: true
mail_relay_for_ssmtp: ''
hostname_for_ssmtp: ''
envelope_from: ''

# frontend
datamodel_uid: ''
objectstore_url: https://schema.easydb.de/objectstore
objectstore_instance_id: prod

# PostgrSQL
# Space-separated list of db-names to dump with the script:
easydb_dump_dbs: "eas easydb"
# Of eas DB in $DBS keep this many newest dumps:
easydb_dump_keep: 7

# cron
cron_update_minute: 23
cron_update_hour: 23
cron_update_weekday: 5
cron_update_script: "{{ easydb_basedir }}/maintain update-auto"
cron_backup_minute: 23
cron_backup_hour: 23
cron_backup_weekday: 1,2,3,4,6,7
cron_backup_script: "{{ easydb_basedir }}/maintain backup"
