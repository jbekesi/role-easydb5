# FIXME: we need a naming scheme, proposing  "easydb_<component>_<something>"
#        e.g. "easydb_es_memory_size" or "easydb_srv_external_user_schema"

skip_customer: false

# docker
easydb_proxy_url: ''
easydb_docker_user: ''
easydb_docker_pass: ''
easydb_docker_registry: docker.easydb.de
easydb_container_network: easydb5

# TODO: prefix variablename with easydb_
socket_webfrontend: 127.0.0.1:81
socket_server:      127.0.0.1:82
socket_eas:         127.0.0.1:83
socket_pgsql:       127.0.0.1:15432
# as a dictionary, for loops
easydb_socket:
  pgsql: "{{ socket_pgsql }}"
  eas: "{{ socket_eas }}"
  server: "{{ socket_server }}"
  webfrontend: "{{ socket_webfrontend }}"

# Where to write log messages to while doing update-auto in the script:
easydb_cron_update_log: /var/log/easydb-update.log
# Path to docker-compose executable:
easydb_script_compose: '`which docker-compose 2>/dev/null`'

# paths
easydb_basedir: /srv/easydb
easydb_volume_config: "{{ easydb_basedir }}/config"

easydb_eas_volume_assets: "{{ easydb_basedir }}/eas/var/opt/easydb/lib/eas/assets"
easydb_eas_volume_log: "{{ easydb_basedir }}/eas/var/opt/easydb/log/eas"
easydb_eas_volume_tmp: "{{ easydb_basedir }}/eas/tmp"

easydb_elasticsearch_volume_var: "{{ easydb_basedir }}/elasticsearch/var/lib/elasticsearch"

easydb_pgsql_volume_backup: "{{ easydb_basedir }}/pgsql/backup"
easydb_pgsql_volume_etc: "{{ easydb_basedir }}/pgsql/etc/postgresql"
easydb_pgsql_volume_lib: "{{ easydb_basedir }}/pgsql/var/lib/postgresql"
easydb_pgsql_volume_log: "{{ easydb_basedir }}/pgsql/var/log/postgresql"

easydb_server_volume_nginx_log: "{{ easydb_basedir }}/easydb-server/var/log/nginx"
easydb_server_volume_var: "{{ easydb_basedir }}/easydb-server/var"
easydb_server_volume_hotfolder: "{{ easydb_basedir }}/easydb-server/hotfolder"

# container configuration
easydb_containers:
  elasticsearch:
    image: "{{ easydb_docker_registry }}/pf/elasticsearch"
    volumes:
      - "{{ easydb_volume_config }}:/config"
      - "{{ easydb_elasticsearch_volume_var }}:/var/lib/elasticsearch"
  pgsql:
    image: "{{ easydb_docker_registry }}/pf/postgresql"
    volumes:
      - "{{ easydb_volume_config }}:/config"
      - "{{ easydb_pgsql_volume_backup }}:/backup"
      - "{{ easydb_pgsql_volume_etc }}:/etc/postgresql"
      - "{{ easydb_pgsql_volume_log }}:/var/log/postgresql"
      - "{{ easydb_pgsql_volume_lib }}:/var/lib/postgresql"
    ports:
      - "{{ easydb_socket.pgsql }}:5432"
  eas:
    image: "{{ easydb_docker_registry }}/pf/eas"
    volumes:
      - "{{ easydb_volume_config }}:/config"
      - "{{ easydb_eas_volume_assets }}:/var/opt/easydb/lib/eas/assets"
      - "{{ easydb_eas_volume_log }}:/var/opt/easydb/log/eas"
      - "{{ easydb_eas_volume_tmp }}:/tmp"
    ports:
      - "{{ easydb_socket.eas }}:80"
  server:
    image: "{{ easydb_docker_registry }}/pf/server-{{ easydb_solution }}"
    volumes:
      - "{{ easydb_volume_config }}:/config"
      - "{{ easydb_server_volume_var }}:/easydb-5/var"
      - "{{ easydb_server_volume_nginx_log }}:/var/log/nginx"
      - "{{ easydb_server_volume_hotfolder }}:/hotfolder"
    ports:
      - "{{ easydb_socket.server }}:80"
  webfrontend:
    image: "{{ easydb_docker_registry }}/pf/webfrontend"
    volumes:
      - "{{ easydb_volume_config }}:/config"
    ports:
      - "{{ easydb_socket.webfrontend }}:80"

# easydb server
easydb_solution: base
external_user_schema: true
enable_post_settings: true
enable_restart: true
enable_purgedata: false
enable_purgeall: false
enable_plugins:
  - base.easydb4migration

# elasticsearch
easydb_max_map_count: 262144
easydb_es_memory_size: 2g

# E-Mail
enable_mailer: true
mail_relay_for_ssmtp: ''
hostname_for_ssmtp: ''
envelope_from: ''

# webfrontend
datamodel_uid: ''
objectstore_url: https://schema.easydb.de/objectstore
objectstore_instance_id: prod

# PostgrSQL
# Space-separated list of db-names to dump with the script:
easydb_dump_dbs: "eas easydb"
# Of eas DB in $DBS keep this many newest dumps:
easydb_dump_keep: 7

# cron
cron_update_minute: 23
cron_update_hour: 23
cron_update_weekday: 5
cron_update_script: "{{ easydb_basedir }}/maintain update-auto"
cron_backup_minute: 23
cron_backup_hour: 23
cron_backup_weekday: 1,2,3,4,6,7
cron_backup_script: "{{ easydb_basedir }}/maintain backup"
